from django.db import models


class BaseItemModel(models.Model):
    """–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –º–æ–¥–µ–ª–µ–π –ø—Ä–µ–¥–º–µ—Ç–æ–≤."""


class ItemType(models.TextChoices):
    """–¢–∏–ø—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç."""

    ARMOR = "armor", "–ë—Ä–æ–Ω—è"
    WEAPON = "weapon", "–û—Ä—É–∂–∏–µ"
    TALISMAN = "talisman", "–¢–∞–ª–∏—Å–º–∞–Ω"
    RECIPE = "recipe", "–†–µ—Ü–µ–ø—Ç"
    MATERIAL = "material", "–†–µ—Å—É—Ä—Å"
    SCROLL = "scroll", "–°–≤–∏—Ç–æ–∫"
    ETC = "etc", "–†–∞–∑–Ω–æ–µ"


class ArmorType(models.TextChoices):
    """–¢–∏–ø—ã –±—Ä–æ–Ω–∏."""

    HEAVY = "heavy", "–¢—è–∂–µ–ª–∞—è"
    LIGHT = "light", "–õ–µ–≥–∫–∞—è"
    ROBE = "robe", "–¢–∫–∞–Ω—å"


class WeaponType(models.TextChoices):
    """–¢–∏–ø—ã –±—Ä–æ–Ω–∏."""

    SWORD = "sword", "–ú–µ—á"
    STAFF = "staff", "–ü–æ—Å–æ—Ö"
    BLUNT = "blunt", "–î—É–±–∏–Ω–∞"
    DAGGER = "dagger", "–ö–∏–Ω–∂–∞–ª"


class ItemGrade(models.TextChoices):
    """–¢–∏–ø—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç."""

    COMMON = "common", "Ô∏è‚ö™Ô∏è –û–±—ã—á–Ω—ã–π"
    UNCOMMON = "uncommon", "üü§ –ù–µ–æ–±—ã—á–Ω—ã–π"
    RARE = "rare", "üîµ –†–µ–¥–∫–∏–π"
    LEGENDARY = "legendary", "üü† –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π"
    EPIC = "epic", "üî¥ –≠–ø–∏—á–µ—Å–∫–∏–π"


class EffectProperty(models.TextChoices):
    """–¢–∏–ø—ã —ç—Ñ—Ñ–µ–∫—Ç–æ–≤."""

    ATTACK = "attack", "Ô∏è‚öîÔ∏è–ê—Ç–∞–∫–∞"
    DEFENCE = "defence", "üõ°–ó–∞—â–∏—Ç–∞"
    EXP = "exp", "üîÆ–û–ø—ã—Ç"
    DROP = "drop", "üçÄ–í—ã–ø–∞–¥–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤"
    HUNTING_TIME = "hunting_time", "‚è≥–í—Ä–µ–º—è –æ—Ö–æ—Ç—ã"


class Item(models.Model):
    """–ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤."""

    name = models.CharField(max_length=32, verbose_name="–ò–º—è")
    description = models.CharField(max_length=256, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ")
    sell_price = models.IntegerField(
        default=0, verbose_name="–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏"
    )
    buy_price = models.IntegerField(
        default=0, verbose_name="–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏"
    )
    grade = models.CharField(
        max_length=16,
        choices=ItemGrade.choices,
        default=ItemGrade.COMMON,
        verbose_name="–†–∞–Ω–≥",
    )
    created = models.DateTimeField(
        auto_now_add=True, verbose_name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"
    )
    type = models.CharField(
        max_length=16,
        choices=ItemType.choices,
        default=ItemType.ETC,
        verbose_name="–¢–∏–ø",
    )

    class Meta:
        verbose_name = "–ü—Ä–µ–¥–º–µ—Ç"
        verbose_name_plural = "–ü—Ä–µ–¥–º–µ—Ç—ã"

    def __str__(self):
        return f"{self.name}"

    @property
    def name_with_grade(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        return f"{self.get_grade_display()[:2]} {self.name}"


class Armor(Item):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏."""

    armor_type = models.CharField(
        max_length=16,
        choices=ArmorType.choices,
        default=ArmorType.HEAVY,
        verbose_name="–í–∏–¥ –±—Ä–æ–Ω–∏",
    )

    class Meta:
        verbose_name = "–ë—Ä–æ–Ω—è"
        verbose_name_plural = "–ë—Ä–æ–Ω—è"


class Weapon(Item):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ä—É–∂–∏—è."""

    weapon_type = models.CharField(
        max_length=16,
        choices=WeaponType.choices,
        default=WeaponType.SWORD,
        verbose_name="–í–∏–¥ –æ—Ä—É–∂–∏—è",
    )

    class Meta:
        verbose_name = "–û—Ä—É–∂–∏–µ"
        verbose_name_plural = "–û—Ä—É–∂–∏—è"


class Scroll(Item):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–∏—Ç–∫–æ–≤."""

    pass

    class Meta:
        verbose_name = "–°–≤–∏—Ç–æ–∫"
        verbose_name_plural = "–°–≤–∏—Ç–∫–∏"


class Material(Item):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤."""

    pass

    class Meta:
        verbose_name = "–†–µ—Å—É—Ä—Å"
        verbose_name_plural = "–†–µ—Å—É—Ä—Å—ã"


class Talisman(Item):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–∏—Ç–∫–æ–≤."""

    pass

    class Meta:
        verbose_name = "–¢–∞–ª–∏—Å–º–∞–Ω"
        verbose_name_plural = "–¢–∞–ª–∏—Å–º–∞–Ω—ã"


class Recipe(Item):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤."""

    level = models.IntegerField(default=1, verbose_name="–£—Ä–æ–≤–µ–Ω—å")
    chance = models.IntegerField(default=100, verbose_name="–®–∞–Ω—Å –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è")
    create = models.ForeignKey(
        Item,
        on_delete=models.CASCADE,
        verbose_name="–ò–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç",
        related_name="recipe_create",
    )

    class Meta:
        verbose_name = "–†–µ—Ü–µ–ø—Ç"
        verbose_name_plural = "–†–µ—Ü–µ–ø—Ç—ã"

    def __str__(self):
        return f"{self.name} ({self.chance}%) (–£—Ä. {self.level})"

    def get_name(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è —Å —à–∞–Ω—Å–æ–º."""
        return f"{self.name_with_grade} ({self.chance}%)"


class Etc(Item):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤."""

    pass

    class Meta:
        verbose_name = "–†–∞–∑–Ω–æ–µ"
        verbose_name_plural = "–†–∞–∑–Ω–æ–µ"


class ItemEffect(models.Model):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤."""

    property = models.CharField(
        max_length=16,
        choices=EffectProperty.choices,
        default=EffectProperty.ATTACK,
        verbose_name="–°–≤–æ–π—Å—Ç–≤–æ",
    )
    amount = models.IntegerField(default=0, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    in_percent = models.BooleanField(default=False, verbose_name="–í –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö")
    item = models.ForeignKey(
        Item,
        on_delete=models.CASCADE,
        verbose_name="–ü—Ä–µ–¥–º–µ—Ç",
        related_name="effect",
    )

    class Meta:
        verbose_name = "–≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–µ–¥–º–µ—Ç–∞"
        verbose_name_plural = "–≠—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤"

    def __str__(self):
        text = f"{self.get_property_display()}: {self.amount}"
        if self.in_percent:
            text += "%"
        return text


class CraftingItem(models.Model):
    """–ú–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞."""

    material = models.ForeignKey(
        to=Material,
        on_delete=models.RESTRICT,
        verbose_name="–ü—Ä–µ–¥–º–µ—Ç",
        related_name="recipes",
    )
    recipe = models.ForeignKey(
        to=Recipe,
        on_delete=models.CASCADE,
        verbose_name="–†–µ—Ü–µ–ø—Ç",
        related_name="materials",
    )
    amount = models.IntegerField(default=1, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")

    class Meta:
        verbose_name = "–ü—Ä–µ–¥–º–µ—Ç –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏"
        verbose_name_plural = "–ü—Ä–µ–¥–º–µ—Ç—ã –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è"

    def __str__(self):
        return f"{self.recipe} | {self.material.name}"
